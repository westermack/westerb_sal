1. When 'add_user.php' returns with an error after PHP validation, the first and last
    name fields are hidden by JS, even if they'd been filled before submission. It needs
    to be ascertained that once JS gives it a go, there isn't a scenario where PHP will
    reject the form. At the moment, as far as I can reckon now, there is only one such
    scenario: when the AJAX validation of the username provided somehow fails/times out
    and the application alerts the user to just go on-- even as the validation failed,
    effectively deferring the task to PHP (my reasoning for allowing the user to proceed
    regardless is, hopefully, this is a network failure and the form won't go through
    anyways-- I could be wrong!)

2. A user feedback mechanism

3. Log all Guest attempts to add/delete/(edit) stuff as '... simulation'

4. Create a separate application error log-- register all exceptions that users encounter
    without my knowledge

5. Use the PHP image functions to resize/resample images as they're being uploaded by the user
    to save thumbs and large photos for display on different pages

6. Add the "data-" prefix to all non-standard HTML attributes in my code (HTML5 Dataset Attributes)

7. Implement a "live" update on comments

8. Implement the HTML5 API for editing text in the application-- complete with all the keyboard
    shortcut events to aid UX

9. How to best deal with FATAL (and PARSE) errors that come through AJAX? (Note: with the "display_errors"
    setting off in the php.ini file, PARSE/FATAL errors are logged only in Apache's error log file, and the
    PHP script's output is void)

10. Implement sorting of albums and photos, and copying and moving photos between albums

11. Re-implement the way "get_subset_of_all()" throws the "no records found" exception

12. Handle HTTP response status codes individually (especially 301, 302, 500)

13. Clean up and organize the CSS file, especially the "absolute-pos" class

14. Highlighting radio buttons and other relevant elements when navigating with tab, as a way of bolstering
    UX and accessibility

14. Generalize the "password" field in the Form class so that the application can dispense with "login.js"--- PARTLY DONE

15. Re-factor entire JS repository in areas that can do without "re-binding" and benefit from jQuery's
    live events (this will answer the question of whether or not the approach of loading the js/ajax js files
    causes double/multiple bindings-- especially in pre-stored sets...the case of which I know to be true on
    ".show_prevs" links when the "outer_wrapper" state for albums is restored, as the "ajax/public_index'js"
    file is executed again (could-- haven't tested yet-- also be the case when nav links load new album sets...))

16. Bind "please_wait_msg()" and "scroll_to_dialog" more generally

17. Revisit hue changes on hover and focus/blur on the file_selector div

18. XHR2 (upload.) "onprogress" event appears to keep on firing even if the sever is put to sleep via PHP's "sleep()"
    in both Firefox and Chrome. In the former, the "onload" event does not fore until "sleep()" expires, whereas,
    the later fires immediately after upload finishes. What are the implications?

19. Get baxk to the erratic "<< Back home" behaviour on the "create_album.php" page-- sometimes the link points to home,
    other times to the "list_albums.php" page (or the problem solved itself with the new AJAX navigation implementation ?)

20. Add accompanying images to the "main dialog msg"

DONE:

21. Why the main home header link won't highlight a blocking modal dialog?

